"use strict";angular.module("unsavedChanges",["resettable","ui.router"]).provider("unsavedWarningsConfig",function(){var g=this;var f=false;var c=true;var e="$stateChangeStart";var d="You will lose unsaved changes if you leave this page";var b="You will lose unsaved changes if you reload this page";var a;Object.defineProperty(g,"navigateMessage",{get:function(){return d},set:function(h){d=h}});Object.defineProperty(g,"navigateDialog",{get:function(){return a},set:function(h){a=h}});Object.defineProperty(g,"reloadMessage",{get:function(){return b},set:function(h){b=h}});Object.defineProperty(g,"useTranslateService",{get:function(){return c},set:function(h){c=!!(h)}});Object.defineProperty(g,"routeEvent",{get:function(){return e}});Object.defineProperty(g,"logEnabled",{get:function(){return f},set:function(h){f=!!(h)}});this.$get=["$injector","$q",function(k,i){function l(m){if(k.has("$translate")&&c){return k.get("$translate").instant(m)}else{return false}}function j(m){if(confirm(m)){return i.when()}else{return i.reject()}}var h={log:function(){if(console.log&&f&&arguments.length){var m=[].slice.call(arguments);if(typeof console.log==="object"){log.apply.call(console.log,console,m)}else{console.log.apply(console,m)}}}};Object.defineProperty(h,"useTranslateService",{get:function(){return c}});Object.defineProperty(h,"reloadMessage",{get:function(){return l(b)||b}});Object.defineProperty(h,"navigateMessage",{get:function(){return l(d)||d}});Object.defineProperty(h,"navigateDialog",{get:function(){return a||j}});Object.defineProperty(h,"routeEvent",{get:function(){return e}});Object.defineProperty(h,"logEnabled",{get:function(){return f}});return h}]}).service("unsavedWarningSharedService",["$rootScope","unsavedWarningsConfig","$injector","$window","$state",function(k,d,l,e,b){var j=this;var a=[];var h=true;var f=[];this.allForms=function(){return a};function i(){h=true;angular.forEach(a,function(n,m){d.log("Form : "+n.$name+" dirty : "+n.$dirty);if(n.$dirty){h=false}});return h}this.init=function(m){if(a.length===0){g()}d.log("Registering form",m);a.push(m)};this.removeForm=function(n){var m=a.indexOf(n);if(m===-1){return}a.splice(m,1);d.log("Removing form from watch list",n);if(a.length===0){c()}};function c(){d.log("No more forms, tearing down");angular.forEach(f,function(m){m()});f=[];e.onbeforeunload=null}this.confirmExit=function(){if(!i()){return d.reloadMessage}k.$broadcast("resetResettables");c()};function g(){d.log("Setting up");e.onbeforeunload=j.confirmExit;var m=k.$on(d.routeEvent,function(p,n,o){d.log("user is moving with "+d.routeEvent);if(!i()){d.log("a form is dirty");if(!n.data){n.data={}}if(n.data.skipUnsavedChangesChecking){n.data.skipUnsavedChangesChecking=undefined;return}p.preventDefault();d.navigateDialog(d.navigateMessage).then(function(){d.log("user doesn't care about loosing stuff");k.$broadcast("resetResettables");n.data.skipUnsavedChangesChecking=true;b.go(n.name,o)},function(){d.log("user wants to cancel leaving")})}else{d.log("all forms are clean")}});f.push(m)}}]).directive("unsavedWarningClear",["unsavedWarningSharedService",function(a){return{scope:{},require:"^form",priority:10,link:function(d,c,b,e){c.bind("click",function(f){e.$setPristine()})}}}]).directive("unsavedWarningForm",["unsavedWarningSharedService","$rootScope",function(b,a){return{scope:{},require:"^form",link:function(e,d,c,g){var f=0;while(d[0].tagName!=="FORM"&&f<3){f++;d=d.parent()}if(f>=3){throw ("unsavedWarningForm must be inside a form element")}b.init(g);d.bind("submit",function(h){if(g.$valid){g.$setPristine()}});d.bind("reset",function(h){h.preventDefault();var i=angular.element(d[0].querySelector("[resettable]"));if(i.length){e.$apply(i.triggerHandler("resetResettables"))}g.$setPristine()});e.$on("$destroy",function(){b.removeForm(g)})}}}]);angular.module("resettable",[]).directive("resettable",["$parse","$compile","$rootScope",function(d,c,b){return{restrict:"A",link:function a(m,g,j,e){var h,k,l;j.$observe("ngModel",function(n){k=d(j.ngModel);h=k.assign;l=k(m)});var i=function(){h(m,l)};g.on("resetResettables",i);var f=m.$on("resetResettables",i);m.$on("$destroy",f)}}}]);